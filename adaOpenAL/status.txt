AdaOpenAL

Generic Sound Package for Ada
used in adagate, adaventure, coterm, kcube, rcube
==================================================
key fact: one needs a single device
and a single context for multiple
sounds & buffers & data!
=====================================


AdaCore documentation:
Here is a relevent section from "i-cexten.ads" 
from gnat-include rts-sources:
--------------------------------------------------
package Interfaces.C.Extensions is ...
   --  C bool
   type bool is new Boolean;
   pragma Convention (C, bool);

	BUT in W32 it differs...
	subtype bool is plain_char;
	...which is incompatible
	with OSX, linux code ???

	HOWEVER in w64 declaration is same & usable!
--------------------------------------------------
ToDo:
.) consider using OTO at ~/Downloads/oalbinding/oto-master/src
	compare oto-alc.ads with my oal_hpp.ads
	I probably could use its cleaner interface if I try...
	27jan21

.) test new w32,osx scripts ?done?
--------------------------------------------------


19nov20:
.) added guard statement in snd4ada.adb:
	.) playSnd() now executes only if not loop
		MINOR issue!


=================================================
12nov20: REupload v1.0.0 to S.F. + GitHub
=================================================

11nov20:
.) added Windows, OSX scripts for ./cppExample/
	.) osx: perfect


=================================================
11nov20: REupload v1.0.0 to S.F. + GitHub
=================================================

11nov20:
.) created a nice example using this package from
	a C++ main. See ./cppExample/


6nov20:
.) forked awesomeAda to add this.
.) letter to Brosgol.


=================================================
5nov20: upload v1.0.0 to S.F. + GitHub
=================================================

5nov20:
.) fixed task termination error that only showed
	itself on OSX. Now strictly wait for each task
	to terminate before calling oal_hpp.cleanup2().


4nov20:
.) Full success...two.adb works fine.
.) single code base IF I use W64 (2020) AdaCore.

4nov20:
.) all is perfect, now!

3nov20:
.) everything now compiles nicely

